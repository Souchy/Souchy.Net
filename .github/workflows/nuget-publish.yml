name: Publish NuGet Package

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      force:
        description: 'Force build even if no changes detected?'
        required: false
        default: 'false'

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        project:
          - name: Souchy.Net
            path: Souchy.Net
            csproj: Souchy.Net/Souchy.Net.csproj
            test: Souchy.Net.Test/Souchy.Net.Test.csproj

          - name: Souchy.Arch
            path: Souchy.Arch
            csproj: Souchy.Arch/Souchy.Arch.csproj
            test: Souchy.Arch.Test/Souchy.Arch.Test.csproj

          - name: Souchy.Godot
            path: Souchy.Godot
            csproj: Souchy.Godot/Souchy.Godot.csproj
            test: Souchy.Godot.Test/Souchy.Godot.Test.csproj

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x' # or 8.0.x / 9.0.x

      - name: Check for changes in ${{ matrix.project.name }}
        id: changes
        run: |
          if git diff --quiet ${{ github.event.before }} ${{ github.sha }} -- ${{ matrix.project.path }}; then
            echo "changed=false" >> $GITHUB_OUTPUT
          else
            echo "changed=true" >> $GITHUB_OUTPUT
          fi

      - name: Restore dependencies
        if: steps.changes.outputs.changed == 'true' || github.event.inputs.force == 'true'
        run: dotnet restore ${{ matrix.project.csproj }}

      - name: Build
        if: steps.changes.outputs.changed == 'true' || github.event.inputs.force == 'true'
        run: dotnet build ${{ matrix.project.csproj }} --configuration Release --no-restore

      - name: Test
        if: steps.changes.outputs.changed == 'true' || github.event.inputs.force == 'true'
        run: dotnet test ${{ matrix.project.test }} --configuration Release --no-build --verbosity normal

      - name: Pack
        if: steps.changes.outputs.changed == 'true' || github.event.inputs.force == 'true'
        run: dotnet pack ${{ matrix.project.csproj }} --configuration Release --no-build -o out /p:IncludeSymbols=true /p:SymbolPackageFormat=snupkg

        # Push to NuGet
      - name: Push to NuGet
        if: steps.changes.outputs.changed == 'true' || github.event.inputs.force == 'true'
        run: dotnet nuget push "out/*.nupkg" --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json

        # Push debug symbols to NuGet
      - name: Push debug symbols to NuGet
        if: steps.changes.outputs.changed == 'true' || github.event.inputs.force == 'true'
        run: dotnet nuget push "out/*.snupkg" --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json
    
        # Push to GitHub Packages
      # - name: Push to GitHub Packages
      #   run: dotnet nuget push "out/*.nupkg" --api-key ${{ secrets.GITHUB_TOKEN }} --source "https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json"
